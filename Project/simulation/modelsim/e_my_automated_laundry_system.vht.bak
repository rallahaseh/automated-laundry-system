-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

-- ***************************************************************************
-- This file contains a Vhdl test bench template that is freely editable to   
-- suit user's needs .Comments are provided in each section to help the user  
-- fill out necessary details.                                                
-- ***************************************************************************
-- Generated on "07/29/2021 13:35:17"
                                                            
-- Vhdl Test Bench template for design  :  e_my_automated_laundry_system
-- 
-- Simulation tool : ModelSim-Altera (VHDL)
-- 

LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                

ENTITY e_my_automated_laundry_system_vhd_tst IS
END e_my_automated_laundry_system_vhd_tst;
ARCHITECTURE e_my_automated_laundry_system_arch OF e_my_automated_laundry_system_vhd_tst IS
-- constants                                                 
-- signals                                                   
SIGNAL CLOCK_50 : STD_LOGIC;
SIGNAL coin_in : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL coin_out : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL green_led : STD_LOGIC;
SIGNAL hex_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL hex_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL hex_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL hex_3 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL hex_4 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL hex_5 : STD_LOGIC_VECTOR(6 DOWNTO 0);
SIGNAL nearby_person_sensor : STD_LOGIC;
SIGNAL password_in : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL push_address_button : STD_LOGIC;
SIGNAL push_password_button : STD_LOGIC;
SIGNAL red_led : STD_LOGIC;
SIGNAL reset : STD_LOGIC;
SIGNAL start_button : STD_LOGIC;
SIGNAL washing_machine_address_in : STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGNAL washing_machine_done_sensor : STD_LOGIC;
COMPONENT e_my_automated_laundry_system
	PORT (
	CLOCK_50 : IN STD_LOGIC;
	coin_in : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	coin_out : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
	green_led : OUT STD_LOGIC;
	hex_0 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	hex_1 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	hex_2 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	hex_3 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	hex_4 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	hex_5 : OUT STD_LOGIC_VECTOR(6 DOWNTO 0);
	nearby_person_sensor : IN STD_LOGIC;
	password_in : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	push_address_button : IN STD_LOGIC;
	push_password_button : IN STD_LOGIC;
	red_led : OUT STD_LOGIC;
	reset : IN STD_LOGIC;
	start_button : IN STD_LOGIC;
	washing_machine_address_in : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	washing_machine_done_sensor : IN STD_LOGIC
	);
END COMPONENT;
BEGIN
	i1 : e_my_automated_laundry_system
	PORT MAP (
-- list connections between master ports and signals
	CLOCK_50 => CLOCK_50,
	coin_in => coin_in,
	coin_out => coin_out,
	green_led => green_led,
	hex_0 => hex_0,
	hex_1 => hex_1,
	hex_2 => hex_2,
	hex_3 => hex_3,
	hex_4 => hex_4,
	hex_5 => hex_5,
	nearby_person_sensor => nearby_person_sensor,
	password_in => password_in,
	push_address_button => push_address_button,
	push_password_button => push_password_button,
	red_led => red_led,
	reset => reset,
	start_button => start_button,
	washing_machine_address_in => washing_machine_address_in,
	washing_machine_done_sensor => washing_machine_done_sensor
	);
init : PROCESS                                               
-- variable declarations                                     
BEGIN                                                        
        -- code that executes only once                      
WAIT;                                                       
END PROCESS init;                                           
always : PROCESS                                              
-- optional sensitivity list                                  
-- (        )                                                 
-- variable declarations                                      
BEGIN                                                         
        -- code executes for every event on sensitivity list  
WAIT;                                                        
END PROCESS always;                                          
END e_my_automated_laundry_system_arch;
